{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","textDecoration","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","backgroundColor","color","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b4acef9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { a } from \"react-router-dom\";\r\n// to make navbar dark light change it to dark\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"      aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className={`nav-a text-${props.mode==='light'?'dark':'light'}`}  style={{ textDecoration: 'none' }} aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} `}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckDefault\">\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2 mx-2 my-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success my-2\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n   \r\n    const handleClearClick = () =>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n\r\n    const handleLowClick = () => {\r\n        // console.log(\"Lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to clipboard\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText =  text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Removed extra spaces\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');\r\n    return (\r\n        <>\r\n        <div style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'black'}}>\r\n        \r\n        <div className=\"container\" > \r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n        </div>\r\n        <div className=\"container\" >\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters.</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read.</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview.\"}</p>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {// if props.alert is null than false && \r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n             <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\r\nimport Navbar from './Components/Navbar';\r\nimport TextForm from './Components/TextForm';\r\nimport Alert from './Components/Alert';\r\nimport React, { useState } from 'react';\r\n// import About from './Components/About';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route\r\n// } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light');  //Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n  \r\n  const showAlert = (message,type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type:type\r\n    })\r\n\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n\r\n  const toggleMode =() => {\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor='#042743';\r\n      showAlert(\"Dark mode has been enabled\",\"success\");\r\n      //change title\r\n      // document.title = \"CodeBuddies_ - Dark Mode\";\r\n\r\n      // change title at an interval \r\n      // setInterval(() => {\r\n      //   document.title = \"Good\";\r\n      // }, 700);\r\n      \r\n      // setInterval(() => {\r\n      //   document.title = \"Night\";\r\n      // }, 1250);\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor='white';\r\n      showAlert(\"Light mode has been enabled\",\"success\");\r\n      // document.title = \"CodeBuddies_ - Light Mode\";\r\n\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar title=\"CodeBuddies\" aboutText=\"About\" mode={mode}  toggleMode={toggleMode}/>\r\n      <Alert alert={alert}/>\r\n      <TextForm showAlert={showAlert} heading=\"Try our Word & Character Counter, Remove extra spaces\" mode={mode} />\r\n        {/* /users --> Component 1\r\n        /users/home -->Component 2 */}\r\n     {/* <Router>\r\n        <Switch>\r\n      <div className=\"container my-3\">\r\n          <Route exact path=\"/about\">\r\n            <About mode={mode} />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n          </Route>\r\n        </Switch>\r\n        \r\n      </div>\r\n    </Router>  */}\r\n        {/* <About/> */}\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}